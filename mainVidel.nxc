#define speed 30
#define step 50
#define discoveryTurn 3 // Test avec 3.

// Ultrasonic IN_4
// Servomotor A C
int distance[discoveryTurn];

sub discovery() // Discovering the surroundings
{
     OnRev(OUT_A, speed); Wait(1000);Off(OUT_A);
     OnFwd(OUT_C, speed); Wait(1000);Off(OUT_C);

     Wait(2000);

     for(int i=0;i<discoveryTurn;i++)
     {
             distance[i] = SensorUS(IN_4);
            // TextOut(0, 30, "status:        ");
             TextOut(0, 55, "           ");
             NumOut(1, 55, SensorUS(IN_4));
             OnRev(OUT_A, speed); Wait(500);Off(OUT_A);
             Wait(2000);
     }

      return ;
}

sub writeText(string sentence, int line, int column)
{
    int lineToUse = 60 - line;
    TextOut(column, lineToUse, "                 ");
    TextOut(column, lineToUse, sentence);
    return;
}

sub writeNum(int number, int line, int column)
{
    int lineToUse = 60 - line;
    TextOut(column, lineToUse, "                 ");
    NumOut(column, lineToUse, number);
   // TextOut(line, 0, "                 ");
   // TextOut(line, column, sentence);
    return;
}

task main()
{
     int keyHighestDistance = 0, highestDistance=1;
     ClearScreen();
     writeText("How's life doing", 0, 0);

     int angle = 0;
     SetSensorLowspeed(IN_4);
     discovery();
     
     for(int i=0; i<discoveryTurn; i++)
     {
             if(distance[i] > highestDistance)
             {
                            highestDistance = distance[i];
                            keyHighestDistance = i;
             }
     }
     //Max Distance and key of the direction
        /* writeText("Distance has been choosen !", 10,0);
           writeNum(keyHighestDistance, 20, 0);
           writeNum(highestDistance, 30, 0);   */
           
     
     
     Wait(2000);
}



/*
TextOut(0, 30, "status:        ");
      NumOut(72, 30, result);
      */
